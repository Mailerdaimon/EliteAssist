mod economy;
mod inventory;
mod navigation;
mod personal;
mod session;
mod vehicle;

pub use economy::*;
pub use inventory::*;
pub use navigation::*;
pub use personal::*;
pub use session::*;
pub use vehicle::*;

use crate::state::*;
use serde::Deserialize;

#[derive(Deserialize, Debug, Default, Clone)]
#[serde(tag = "event")]
pub enum Event {

    #[serde(rename = "Fileheader")]
    FileHeader(FileHeader),
    Commander(Commander),
    Materials(Materials),
    Rank(Rank),
    Progress(Progress),
    Reputation(Reputation),
    EngineerProgress(EngineerProgress),
    SquadronStartup(SquadronStartup),
    LoadGame(LoadGame),
    Statistics(Statistics),
    ReceiveText(ReceiveText),
    Location(Location),
    Powerplay(Powerplay),
    Music(Music),
    SuitLoadout(Empty),
    Backpack(Backpack),
    ShipLocker(ShipLocker),
    Missions(Missions),
    Shutdown(Shutdown),
    Loadout(ShipLoadout),
    BuyAmmo(BuyAmmo),
    RestockVehicle(RestockVehicle),
    BuyMicroResources(BuyMicroResources),
    Status(Status),
    Embark(Embark),
    Disembark(Disembark),
    NpcCrewPaidWage(NpcCrewPaidWage),
    Cargo(Cargo),
    Market(Market),
    Docked(Docked),
    BookDropship(BookDropship),
    StartJump(StartJump),
    LaunchDrone(LaunchDrone),
    SupercruiseEntry(SupercruiseEntry),
    SupercruiseExit(SupercruiseExit),
    Resurrect(Resurrect),
    FSSSignalDiscovered(FSSSignalDiscovered),
    NavRoute(Empty),
    Shipyard(Shipyard),
    ApproachSettlement(ApproachSettlement),
    StoredShips(StoredShips),
    SwitchSuitLoadout(SuitLoadout),
    MissionAccepted(MissionAccepted),
    FSDTarget(FSDTarget),
    ShipyardSwap(ShipyardSwap),
    ShipyardTransfer(ShipyardTransfer),
    RefuelAll(RefuelAll),
    ClearImpound(ClearImpound),
    ModuleInfo(Empty),
    Undocked(Undocked),
    CommitCrime(CommitCrime),
    UnderAttack(UnderAttack),
    CollectItems(CollectItems),
    LeaveBody(LeaveBody),
    FSDJump(FSDJump),
    NavRouteClear(Empty),
    Bounty(Bounty),
    ReservoirReplenished(ReservoirReplenished),
    UseConsumable(UseConsumable),
    Outfitting(Outfitting),
    DockingDenied(DockingDenied),
    MissionFailed(MissionFailed),
    SupercruiseDestinationDrop(SupercruiseDestinationDrop),
    MissionAbandoned(MissionAbandoned),
    EngineerCraft(EngineerCraft),
    DropshipDeploy(DropshipDeploy),
    FuelScoop(FuelScoop),
    ApproachBody(ApproachBody),
    Scan(Scan),
    StoredModules(StoredModules),
    SAASignalsFound(SAASignalsFound),
    DockingRequested(DockingRequested),
    DockingGranted(DockingGranted),
    HeatWarning(Empty),
    ShieldState(ShieldState),
    MissionCompleted(MissionCompleted),
    MaterialTrade(MaterialTrade),
    FSSAllBodiesFound(FFSSAllBodiesFound),
    FactionKillBond(FactionKillBond),
    RedeemVoucher(RedeemVoucher),
    PayBounties(PayBounties),
    Touchdown(Touchdown),
    ShipyardSell(ShipyardSell),
    ScanOrganic(ScanOrganic),
    RepairAll(RepairAll),
    DatalinkScan(DatalinkScan),
    NavBeaconScan(NavBeaconScan),
    MultiSellExplorationData(MultiSellExplorationData),
    Liftoff(Liftoff),
    EscapeInterdiction(EscapeInterdiction),
    ModuleBuy(ModuleBuy),
    USSDrop(USSDrop),
    ScanBaryCentre(ScanBaryCentre),
    Repair(Repair),
    Passengers(economy::Passengers),
    MissionRedirected(MissionRedirected),
    UpgradeWeapon(UpgradeWeapon),
    Resupply(Resupply),
    Died(Died),
    SrvDestroyed(SrvDestroyed),
    CodexEntry(CodexEntry),
    ModuleSell(ModuleSell),
    ModuleStore(ModuleStore),
    ModuleRetrieve(ModuleRetrieve),
    ShipTargeted(ShipTargeted),
    EjectCargo(EjectCargo),
    HullDamage(HullDamage),
    CrewAssign(CrewAssign),
    DockFighter(DockFighter),
    CommunityGoal(CommunityGoal),
    LaunchFighter(LaunchFighter),
    Scanned(Scanned),
    Friends(Friends),
    BackpackChange(BackpackChange),
    SetUserShipName(SetUserShipName),
    FSSDiscoveryScan(FSSDiscoveryScan),
    SendText(SendText),
    BuyDrones(BuyDrones),
    ShipyardBuy(ShipyardBuy),
    Promotion(Promotion),
    CollectCargo(CollectCargo),
    HeatDamage(Empty),
    SAAScanComplete(SAAScanComplete),
    CreateSuitLoadout(SuitLoadout),
    MaterialCollected(MaterialCollected),
    LaunchSRV(LaunchSRV),
    Synthesis(Synthesis),
    TradeMicroResources(TradeMicroResources),
    CrimeVictim(CrimeVictim),
    JetConeBoost(JetConeBoost),
    DockingCancelled(DockingCancelled),
    FetchRemoteModule(FetchRemoteModule),
    PayFines(PayFines),
    SearchAndRescue(navigation::SearchAndRescue),
    ShipyardNew(ShipyardNew),
    CommunityGoalReward(CommunityGoalReward),
    CrewMemberJoins(CrewMemberJoins),
    Interdicted(Interdicted),
    SellOrganicData(SellOrganicData),
    DockSRV(DockSRV),
    FighterDestroyed(FighterDestroyed),
    ModuleSwap(ModuleSwap),
    MaterialDiscovered(MaterialDiscovered),
    DataScanned(DataScanned),
    VehicleSwitch(VehicleSwitch),
    MarketBuy(MarketBuy),
    ModuleSellRemote(ModuleSellRemote),
    AfmuRepairs(AfmuRepairs),
    CommunityGoalJoin(CommunityGoalJoin),
    NpcCrewRank(NpcCrewRank),
    LoadoutEquipModule(LoadoutEquipModule),
    FighterRebuilt(FighterRebuilt),
    PowerplayJoin(PowerplayJoin),
    CrewMemberRoleChange(CrewMemberRoleChange),
    SelfDestruct(Empty),
    BookTaxi(BookTaxi),
    MarketSell(MarketSell),
    SellWeapon(SellWeapon),
    SystemsShutdown(Empty),
    ProspectedAsteroid(ProspectedAsteroid),
    SRVDestroyed(SrvDestroyed),
    DiscoveryScan(DiscoveryScan),
    CrewLaunchFighter(CrewLaunchFighter),
    BuyWeapon(BuyWeapon),
    RenameSuitLoadout(SuitLoadout),
    MiningRefined(MiningRefined),
    CancelTaxi(CancelTaxi),
    EngineerContribution(EngineerContribution),
    SellMicroResources(SellMicroResources),
    UpgradeSuit(UpgradeSuit),
    AppliedToSquadron(AppliedToSquardon),
    CrewMemberQuits(CrewMemberQuits),
    ChangeCrewRole(ChangeCrewRole),
    AsteroidCracked(AsteroidCracked),
    DatalinkVoucher(DatalinkVoucher),
    DeliverPowerMicroResources(DeliverPowerMicroResources),
    Interdiction(Interdiction),
    EndCrewSession(EndCrewSession),
    BuySuit(Suit),
    SellSuit(Suit),
    DeleteSuitLoadout(SuitLoadout),

    NavigateTo(ActiveScreen),

    #[default]
    None,
}

#[derive(Deserialize, Debug, Default, Clone)]
pub struct Empty{
    pub timestamp: String
}